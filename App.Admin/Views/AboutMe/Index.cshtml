@using App.Shared.Models
@model AboutMeViewModel

@{
    ViewData["Title"] = "About Me";
}

<div class="container my-3">
    <h2>About Me</h2>

    <table class="table table-striped">
        <tbody>
            <tr>
                <td><strong>Introduction:</strong></td>
                <td>@Model.Introduciton</td>
            </tr>
            <tr>
                <td><strong>Title:</strong></td>
                <td>@Model.Title</td>
            </tr>
            <tr>
                <td><strong>CV:</strong></td>
                <td>
                    @if (!string.IsNullOrEmpty(Model.Cv))
                    {
                        <a asp-controller="AboutMe" asp-action="DownloadCv" asp-route-fileUrl="@Model.Cv">Download CV</a>
                    }
                    else
                    {
                        <span>No CV available</span>
                    }
                </td>
            </tr>
            <tr>
                <td><strong>Image 1:</strong></td>
                <td>
                    @if (!string.IsNullOrEmpty(Model.ImageUrl1))
                    {
                        <img src="@Model.ImageUrl1" alt="Image 1" class="img-fluid" style="max-width: 200px;" />
                    }
                    else
                    {
                        <span>Image 1 not found</span>
                    }
                </td>
            </tr>
            <tr>
                <td><strong>Image 2:</strong></td>
                <td>
                    @if (!string.IsNullOrEmpty(Model.ImageUrl2))
                    {
                        <img src="@Model.ImageUrl2" alt="Image 2" class="img-fluid" style="max-width: 200px;" />
                    }
                    else
                    {
                        <span>Image 2 not found</span>
                    }
                </td>
            </tr>
        </tbody>
    </table>

    <div class="mt-3">
        <a asp-controller="AboutMe" asp-action="Edit" class="btn btn-primary">Edit</a>
    </div>
</div>
